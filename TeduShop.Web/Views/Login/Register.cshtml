@model TeduShop.Web.Models.RegisterViewModel
@using BotDetect.Web.Mvc;

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/Layouts.cshtml";
}
<link href="@BotDetect.Web.CaptchaUrls.Absolute.LayoutStyleSheetUrl" rel="stylesheet" type="text/css" />
<div class="page section-header text-center">
    <div class="page-title">
        <div class="wrapper"><h1 class="page-width">Đăng ký tài khoản</h1></div>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-12 col-sm-12 col-md-6 col-lg-6 main-col offset-md-3">
            <div class="mb-4">
                @using (Html.BeginForm("Register", "Login", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    if (ViewData["Success"] != null)
                    {
                        <div class="alert alert-success" role="alert">
                            <strong>Đăng ký thành viên thành công!</strong>
                            <br /><p>Vui lòng Click <a href="/dang-nhap.html">vào đây</a> để đăng nhập.</p>
                        </div>
                    }
                    <div class="row">
                        <div class="col-12 col-sm-12 col-md-12 col-lg-12">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                <label for="FirstName">Tên đăng nhập</label>
                                @Html.TextBoxFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-12 col-md-12 col-lg-12">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                <label for="FirstName">Mật khẩu</label>
                                @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-12 col-md-12 col-lg-12">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                <label for="FirstName">Họ và tên</label>
                                @Html.TextBoxFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-12 col-md-12 col-lg-12">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                <label for="FirstName">Địa chỉ nhà</label>
                                @Html.TextBoxFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-12 col-md-12 col-lg-12">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                <label for="FirstName">Địa chỉ Email</label>
                                @Html.TextBoxFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-12 col-md-12 col-lg-12">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                <label for="FirstName">Số điện thoại</label>
                                @Html.TextBoxFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12 col-sm-12 col-md-6 col-lg-6">
                                <div class="form-group">
                                    @{ MvcCaptcha exampleCaptcha = new MvcCaptcha("RegisterCaptcha");}
                                    @Html.Captcha(exampleCaptcha)
                                    @Html.TextBox("CaptchaCode")
                                </div>
                            </div> 
                        </div>
                    </div>
                    <div class="row">
                        <div class="text-center col-12 col-sm-12 col-md-12 col-lg-12">
                            <input type="submit" class="btn mb-3" value="Đăng ký">
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>